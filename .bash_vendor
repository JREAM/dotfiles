#!/bin/bash
# shellcheck disable=SC1090,SC2086,SC1091
# ╔═════════════════════════════════════════════════════════════════╗
# ║ BASH_VENDORS                                                    ║
# ╚═════════════════════════════════════════════════════════════════╝

# https://github.com/cheat/cheat
export CHEAT_USE_FZF=true

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Java JDK                                                        ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]       default-jdk default-jre
# [Locate]    $ readlink -f `which javac` | sed "s:/bin/javac::"
# [Notes]     Java is always a symbolic link using update-alternatives
if [ -L /usr/bin/java ]; then
  export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/bin/java
  export PATH=$PATH:$JAVA_HOME/bin
fi

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Docker                                                          ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]     docker docker-compose
# [Use]     $ docker -h | $ docker-compose -h
if hash docker 2>/dev/null; then
  [ -f $HOME/.dockerrc ] && source $HOME/.dockerrc
  [ -f $HOME/.docker-complete ] && source ~/.docker-complete
fi

# ╔═════════════════════════════════════════════════════════════════╗
# ║  Node / NPM / Yarn / PNPM                                       ║
# ║  (!) Place ~/.yarn before ~/.npm so is takes precidence.        ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]     Yarn (NPM alternative)
# [Install] $ npm i -g yarn
# ───────────────────────────────────────────────────────────────────
[[ -d $HOME/.yarn/bin ]] && export PATH=$PATH:$HOME/.yarn/bin

# pnpm (Phantom NPM) (NPM Alternative)
# ───────────────────────────────────────────────────────────────────
# [Pkg]       https:/pnpm.io
# [Install]   curl -fsSL https://get.pnpm.io/install.sh | sh -
# [Use]       $ pnpm -h
if [ -d $HOME/.local/share/pnpm ]; then
  export PNPM_HOME="$HOME/.local/share/pnpm"
  export PATH="$PNPM_HOME:$PATH"
fi

# Completions
# ───────────────────────────────────────────────────────────────────
[ -f $HOME/.npm-completion ] && source ~/.npm-completion
[ -f $HOME/.yarn-completion ] && source ~/.yarn-completion

# For PNPM
[ -f $HOME/.config/tabtab/bash/__tabtab.bash ] && source $HOME/.config/tabtab/bash/__tabtab.bash

# ╔═════════════════════════════════════════════════════════════════╗
# ║  GoLang                                                         ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]       https://go.dev/
# [Install]   Download @ https://go.dev/dl/
# [Use]       $ go -h
if [ -d /usr/local/go ]; then
  # Do GO development in $GOPATH
  export GOPATH=$HOME/go
  export PATH=$PATH:/usr/local/go/bin
  export PATH=$PATH:$GOPATH/bin
fi

# ╔═════════════════════════════════════════════════════════════════╗
# ║  Python / PyEnv                                                 ║
# ╚═════════════════════════════════════════════════════════════════╝
# Stop generating bytecode files
export PYTHONDONTWRITEBYTECODE=1
export WORKON_HOME="$XDG_DATA_HOME/virtualenvs"

# Pipx is for installing pythong commands (not packages)
# ───────────────────────────────────────────────────────────────────
# [Pkg]   pip install pipx
if command -v pipx &>/dev/null; then
  eval "$(register-python-argcomplete pipx)"
fi

# ╔═════════════════════════════════════════════════════════════════╗
# ║  FNM (Faster Node Version Manager)                                     ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]     https://github.com/Schniz/fnm
# [Install] $ curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir ".local/bin/" --skip-shell
#             fnm completions --shell bash > .config/bash_completion/fnm.bash

# [Use]     $ fvm -h
if [ $(which fnm) >&/dev/null ]; then
  # --use-on-cd allows to load .nvmrc to a projcet
  eval "$(fnm env --use-on-cd)"
fi

# ╔═════════════════════════════════════════════════════════════════╗
# ║  NVM (Node Version Manager)                                     ║
# ╚═════════════════════════════════════════════════════════════════╝
# [Pkg]     https://github.com/nvm-sh/nvm
# [Install] $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
# [Use]     $ nvm -h
# (Not Used) This is to remind me to change to $ fnm by being reminded
alias nvm="echo 'use $ fnm'"

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Bash Helpers                                                    ║
# ╚═════════════════════════════════════════════════════════════════╝

# Git CLI Completions
# ───────────────────────────────────────────────────────────────────
if [ -f $HOME/.git-completion.bash ]; then
  source $HOME/.git-completion.bash
fi

#  GRC (Bash Color Highlights)
# ───────────────────────────────────────────────────────────────────
# [Pkg]     apt install grc
# [Toggle]  sudo sed -i 's/^GRC_ALIASES.*/GRC_ALIASES=true/' /etc/default/grc
export GRC_ALIASES=true
if [ -f /etc/profile.d/grc.sh ]; then
  source /etc/profile.d/grc.sh
fi

# Better concat (cat) function  with colors
# ───────────────────────────────────────────────────────────────────
# [Pkg]   https://github.com/sharkdp/bat
# [Use]   $ batcat -h
if command -v batcat &>/dev/null; then
  # --plain for no line numbers
  # --paging never (because I can't copy/paste so nicely)
  alias cat='batcat --theme="Monokai Extended Origin" --plain --paging=never'
fi

# Z Directory Jumper - Easily Finds Recent Paths
# ───────────────────────────────────────────────────────────────────
# [Pkg]   https://github.com/skywind3000/z.lua
# [Use]   $ z serv <ENTER> ; (Will go to recent path of /server/)
if [ -f $HOME/.z.lua/z.lua ]; then
  eval "$(lua $HOME/.z.lua/z.lua --init bash enhanced once)"
fi

# FZF Fuzzy Finder (Very Powerful Tool)
# ───────────────────────────────────────────────────────────────────
# [Pkg]   https://github.com/junegunn/fzf
#         apt install fzf
# [Use]   $ fzf
#         $ cat anyfile | fzf
#         <ALT> + C   Fuzzy Directory Jump
#         <CTRL> + R  History Fuzzy Search
if [ -f $(which fzf) >& /dev/null ]; then

  export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border=rounded --tabstop=4 --color=dark,info:bright-green,pointer:green,hl:bright-green'
  export FZF_DEFAULT_COMMAND="fd . $HOME"
  export FZF_ALT_C_COMMAND="fd -t d . $HOME"
  #fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'

  source ~/.config/bash_completion/fzf-key-bindings.bash

  _fzf_comprun() {
    local command=$1
    shift
    case "$command" in
    cd) fzf "$@" --preview 'tree -C {} | head -200' ;;
    *) fzf "$@" ;;
    esac
  }
fi

# DirEnv Configures directory specific environment settings
# ───────────────────────────────────────────────────────────────────
# [Pkg]   https://direnv.net/
# [Use]   touch .envrc
if (($ + commands[direnv])) >/dev/null 2>&1; then
  eval "$(direnv hook bash)"
fi
