#!/bin/bash
# ╔═════════════════════════════════════════════════════════════════╗
# ║ BASH_VEDNORS                                                    ║
# ╠═════════════════════════════════════════════════════════════════╣
# ║ Entry Point to all Bash Utilities                               ║
# ╚═════════════════════════════════════════════════════════════════╝

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) Kubernetes                                           │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if (( $+commands[kubectl] )) >/dev/null 2>&1; then
  source <(kubectl completion bash)
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) PHP Composer Related                                    │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
# Include local composer folder if exists
export COMPOSER_HOME=""
if [ -d ~/.composer/vendor/bin ] ; then
  PATH=~/.composer/vendor/bin:$PATH
  export COMPOSER_HOME=`composer config -g home`
fi

# Include composer autocomplete if exists
if [ -d $COMPOSER_HOME/vendor/bamarni/symfony-console-autocomplete ]; then
  eval "$(symfony-autocomplete)"
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) Rust Language Environment                            │
# └─────────────────────────────────────────────────────────────────┘
if [ -f $HOME/.cargo/env ]; then
  source $HOME/.cargo/env
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) Node/Yarn Related                                    │
# ├─────────────────────────────────────────────────────────────────┤
# │ Place ~/.yarn before ~/.npm so is takes presedense.             │
# └─────────────────────────────────────────────────────────────────┘
# JS Package Manager Related
[[ -f ~/.npm-completion ]] && source ~/.npm-completion
[[ -f ~/.yarn-completion ]] && source ~/.yarn-completion
[[ -f ~/.docker-complete ]] && source ~/.docker-complete
[[ -d ~/.yarn/bin ]] && export PATH=$PATH:~/.yarn/bin

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) GoLang                                               │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if [ -d /usr/local/go ]; then
  export GOPATH=$HOME/go
  export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) PyEnv (Python Version Manager)                       │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if [ -d $HOME/.pyenv ]; then

  # @install https://github.com/pyenv/pyenv#installation
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"

  # Autocompelte
  if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
  fi

fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) RbEnv (Ruby Version Manager)                       │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if [ -d $HOME/.rbenv ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) GVM (GoLang Version Manager)                         │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘

if [ -s $HOME/.gvm/scripts/gvm ]; then
    source "$HOME/.gvm/scripts/gvm"
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ (Optional) NVM (Node Version Manager)                           │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if [ -d $HOME/.nvm ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
  # Loads NVM bash_completion
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

  load-nvmrc() {
    if [[ -f .nvmrc && -r .nvmrc ]]; then
      nvm use
    elif [[ $(nvm version) != $(nvm version default)  ]]; then
      echo "Reverting to nvm default version"
      nvm use default
    fi
  }

  cd() { builtin cd "$@"; 'load-nvmrc'; }
fi

# ┌─────────────────────────────────────────────────────────────────┐
# │ GRC Color Highlighting                                          │
# ├─────────────────────────────────────────────────────────────────┤
# └─────────────────────────────────────────────────────────────────┘
if hash grc &>/dev/null; then
  if [ -s ~/etc/grcbash ]; then
    source ~/etc/grcbash
  fi
  if [ -f "$HOME/.grc/grc.bashrc" ]; then
    source "$HOME/.grc/grc.bashrc"
  fi
fi

