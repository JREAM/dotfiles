#!/bin/bash
# shellcheck disable=SC2086,SC2032,SC2033,SC2142
# ╔═════════════════════════════════════════════════════════════════╗
# ║ BASH_ALIASES                                                    ║
# ╚═════════════════════════════════════════════════════════════════╝
#  (!) .bash_alias is sourced from .bashrc

# ┌─────────────────────────────────────────────────────────────────┐
# │ Personal Shortcuts                                              │
# └─────────────────────────────────────────────────────────────────┘
[ -d $HOME/Downloads ] && alias dl='cd $HOME/Downloads'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Apply colors as much as possible                                │
# └─────────────────────────────────────────────────────────────────┘
COLORIZE=""
[ -f /usr/bin/grc ] &>/dev/null && COLORIZE='grc'
export GREP_COLOR='1;32'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Apt Package Manager                                             │
# └─────────────────────────────────────────────────────────────────┘
alias apt='sudo apt'
alias autoclean='sudo apt autoclean'
alias autoremove='clean'
alias clean='sudo apt autoremove; sudo apt autoclean'
alias ppa='sudo apt-add-repository'
alias update='sudo apt-get update'
alias updatey='sudo apt-get update && \
  sudo apt-get upgrade -y && \
  sudo apt autoremove -y && \
  sudo apt autoclean'
alias upgrade='sudo apt-get upgrade'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Common                                                      │
# └─────────────────────────────────────────────────────────────────┘
alias sudo='sudo '   # (1) Place above other sudo commands to enable aliases to be sudo-ed.
alias root='sudo -i' # Become root
alias su='sudo -i'   # Become root

alias h='history'
alias c='clear'
alias j='jobs -l'
alias left='ls -t -1' # See where I last left off

alias nv=nvim         # neovim
alias vi=vim          # vim
alias vims='sudo vim' # sudo mode vim

alias bashreload='source $HOME/.bashrc'
alias permissions-octal='stat -c \"%a %n\" -- $1'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Navigation                                                      │
# └─────────────────────────────────────────────────────────────────┘
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .3='cd ../../../'
alias .4='cd ../../../../'

alias la="ls -lah --color=auto" # Horizontal List
alias ll="ls -lah --color=auto" # Long/Vertical List
alias ls="ls --color=auto "
alias l.="ls -d .* --color=auto | column -s='\n'" # List Hidden files
alias lh="l. --color=auto"                        # <List Hidden Files>; Alias for Alias
alias ll.="ls -lhd .* --color=auto"               # Long List Hiddent
alias llh="ll. --color=auto"                      # <List Hiddent Files; Alias for Alias

# ┌─────────────────────────────────────────────────────────────────┐
# │ Copy / Get / Remove                                             │
# └─────────────────────────────────────────────────────────────────┘
alias cpv='rsync -ah --info=progress2' # Progress bar'
alias findfile="find . -name "         # Make find a little easier
alias mkdir='mkdir -pv'                # $ mkdir x/y/z
alias rm='rm -I --preserve-root'       # Prompt if deleting more than 3 files at a time
alias wget="wget -c"                   # Resume if failed by default
alias xclip='xclip -sel clip'          # Copy to Clipboard $ cat file.txt | xclip

# ┌─────────────────────────────────────────────────────────────────┐
# │ Grep                                                            │
# └─────────────────────────────────────────────────────────────────┘
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Permissions / Ownership                                         │
# └─────────────────────────────────────────────────────────────────┘
alias chgrp='sudo chgrp --preserve-root'
alias chmod='sudo chmod --preserve-root'
alias chmox='sudo chmod --preserve-root' # I always make this typo
alias chown='sudo chown --preserve-root'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Services                                                        │
# └─────────────────────────────────────────────────────────────────┘
alias service='sudo service'
alias systemctl='sudo systemctl'

alias poweroff='sudo /sbin/poweroff'
alias reboot='sudo /sbin/reboot'
alias shutdown='sudo /sbin/shutdown'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Ping / IP / Network                                             │
# └─────────────────────────────────────────────────────────────────┘
alias fastping='ping -c 100 -s.2'
alias myip="curl -s https://checkip.amazonaws.com"
alias myips="hostname -I"
alias iplist='sudo $COLORIZE /sbin/iptables -L -n -v --line-numbers'
alias iptlistfw='sudo $COLORIZE /sbin/iptables -L FORWARD -n -v --line-numbers'
alias iptlistin='sudo $COLORIZE /sbin/iptables -L INPUT -n -v --line-numbers'
alias iptlistout='sudo $COLORIZE /sbin/iptables -L OUTPUT -n -v --line-numbers'
alias ping='ping -c 5' # Send X packets
alias ports="netstat -tulanp"

alias filesystem-reload='sudo systemctl start remote-fs.target local-fs.target && sudo systemctl daemon-reload' # FStab, mount -a doesn't work
alias fsreload="filesystem-reload"

# ┌─────────────────────────────────────────────────────────────────┐
# │ HDD Related                                                     │
# └─────────────────────────────────────────────────────────────────┘
alias df='df -H | grep -v "/snap"' # Excloude /snap directories
alias du='du -ch'                  # Disk Usage
alias mount='mount | column -t'
alias most='du -hsx * | sort -rh | head -10'
alias usage='du -ch | grep total'
alias totalusage='df -hl --total | grep total'

# ┌─────────────────────────────────────────────────────────────────┐
# │ CPU / Memory Related                                            │
# └─────────────────────────────────────────────────────────────────┘
alias pscpu="ps auxf | sort -nr -k 3"
alias pscpu10="ps auxf | sort -nr -k 3 | head -10"
alias psmem="ps auxf | sort -nr -k 4"
alias psmem10="ps auxf | sort -nr -k 4 | head -10"

# ┌─────────────────────────────────────────────────────────────────┐
# │ SSH                                                             │
# └─────────────────────────────────────────────────────────────────┘
alias ssh-fingerprint='ssh-keygen -lf $1'
alias ssh-permissions='chown -R $USER:$USER ~/.ssh && \
  chmod 700 ~/.ssh && \
  chmod 600 ~/.ssh/* && \
  chmod 644 ~/.ssh/{*.pub,config,known_hosts}'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Hardware Info                                                   │
# └─────────────────────────────────────────────────────────────────┘
alias hardware-bios='sudo dmidecode -t bios'
alias hardware-cache='sudo dmidecode -t cache'
alias hardware-chassis='sudo dmidecode -t chassis'
alias hardware-connector='sudo dmidecode -t connector'
alias hardware-cpu='sudo dmidecode -t processor'
alias hardware-memory='sudo dmidecode -t memory'
alias hardware-motherboard='sudo dmidecode -t baseboard'
alias hardware-slot='sudo dmidecode -t slot'
alias hardware-system='sudo dmidecode -t system'

# ┌─────────────────────────────────────────────────────────────────┐
# │ Utility Packages                                                │
# └─────────────────────────────────────────────────────────────────┘
# [Pkg]     apt install tre-command
[ -f /usr/bin/tre ] && alias tree="tre"

# [Pkg]     apt install colordiff
[ -f /usr/bin/colordiff ] && alias diff='colordiff'

# [Pkg]     apt install nmap
[ -f /usr/bin/nmap ] && alias portsopen='nmap localhost --open'

# [Pkg]     npm i -g vtop
# Directory can change w/NVM Versions so check: -x
[ -x "$(command -v vtop)" ] &>/dev/null && alias top="vtop"

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Python                                                          ║
# ╚═════════════════════════════════════════════════════════════════╝
alias py='python'
alias ve='python3 -m venv ./venv'     # Creates VirtualEnv
alias va='source ./venv/bin/activate' # Activates VirtualEnv

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Nginx                                                           ║
# ╚═════════════════════════════════════════════════════════════════╝
function ngensite { sudo ln -s "/etc/nginx/sites-available/$1" /etc/nginx/sites-enabled; }
function ngdissite { sudo rm "/etc/nginx/sites-enabled/$1"; }
alias nginx='sudo nginx'

alias ngdir='cd /etc/nginx/'
alias nglog-access='tail -f /var/log/nginx/access.log'
alias nglog-error='tail -f /var/log/nginx/error.log'
alias ngsites='ls /etc/nginx/sites-available'
alias ngsitesen='ls /etc/nginx/sites-enabled'
alias ngreload='sudo service nginx reload'
alias ngrestart='sudo service nginx restart'
alias ngstart='sudo service nginx start'
alias ngstatus='sudo service nginx status'
alias ngstop='sudo service nginx stop'
alias ngtest='sudo nginx -t'

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Apache2                                                         ║
# ╚═════════════════════════════════════════════════════════════════╝
alias a2modsen='ls /etc/apache2/mods-enabled'
alias a2mods='ls /etc/apache2/mods-available'
alias a2sitesen='ls /etc/apache2/sites-enabled'
alias a2sites='ls /etc/apache2/sites-available'

alias a2graceful='sudo /usr/sbin/apachectl -k graceful'
alias a2modlist='sudo apachectl -t -D DUMP_MODULES'
alias a2dir='cd /etc/apache2/'
alias a2reload='sudo service apache2 reload'
alias a2restart='sudo service apache2 restart'
alias a2start='sudo service apache2 start'
alias a2status='sudo service apache2 status'
alias a2stop='sudo service apache2 stop'
alias a2test='sudo apachectl -t'
alias a2version='sudo apachectl -v'
alias a2vhosts='sudo apachectl -t -D DUMP_VHOSTS'

alias a2disconf='sudo a2disconf'
alias a2dismod='sudo a2dismod'
alias a2dissite='sudo a2dissite'
alias a2enconf='sudo a2enconf'
alias a2enmod='sudo a2enmod'
alias a2ensite='sudo a2ensite'

alias a2acclog='tail -n 50 /var/log/apache2/access.log'
alias a2errlog='tail -n 50 /var/log/apache2/error.log'

# ╔═════════════════════════════════════════════════════════════════╗
# ║ MySQL                                                           ║
# ╚═════════════════════════════════════════════════════════════════╝
alias mysqlvars="mysql -NBe 'SHOW VARIABLES'| sed 's,\t,^=,' | column -ts^"

# ╔═════════════════════════════════════════════════════════════════╗
# ║ PHP FPM                                                         ║
# ╚═════════════════════════════════════════════════════════════════╝
function get_phpversion() {
  local version
  version=$(php -r 'echo PHP_MAJOR_VERSION .".". PHP_MINOR_VERSION;')
  echo "$version"
}

# Run once when unset, let phpversion() change the value
if [ -z "$PHP_FPM_VERSION" ]; then
  PHP_FPM_VERSION=$(get_phpversion)
  export PHP_FPM_VERSION
fi

function _reload_php_aliases() {
  if [ -x "$(command -v php-fpm$PHP_FPM_VERSION)" ] &>/dev/null; then
    # Get Linux friendly version, eg: 7.4, 8.1
    alias phpfpm-dir='cd /etc/php/$PHP_FPM_VERSION/'
    alias phpfpm-log='sudo tail -f /var/log/php$PHP_FPM_VERSION-fpm.log'
    alias phpfpm-stop='sudo service php-fpm$PHP_FPM_VERSION stop'
    alias phpfpm-reload='sudo service php-fpm$PHP_FPM_VERSION start'
    alias phpfpm-restart='sudo service php-fpm$PHP_FPM_VERSION restart'
    alias phpfpm-status='sudo service php-fpm$PHP_FPM_VERSION status'
  fi
}
_reload_php_aliases

# Change PHP Version using update-alternatives
# Will affect the composer installation version also
# ** See setup notes at bottom for composer
function phpversion() {
  echo "[!] This updates PHP CLI only, not your webserver."
  if [ -n "$1" ]; then
    if [ -f "/usr/bin/php$1" ]; then
      sudo update-alternatives --set php "/usr/bin/php$1"
    else
      echo "[!] Error: File does not exist at /usr/bin/php$1"
      return 0
    fi
  else
    sudo update-alternatives --config php
  fi
  PHP_FPM_VERSION=$(get_phpversion)
  export PHP_FPM_VERSION

  # Set composer to use the same PHP Version to avoid problems
  # **Assumes installed the way described at bottom
  sudo update-alternatives --set composer "/usr/bin/composer$PHP_FPM_VERSION"
  echo -e "\n[+] switched composer to current version."
  echo -e "\n[+] exported variable: \$PHP_FPM_VERSION ($PHP_FPM_VERSION)"
  echo -e "[+] use the phpfpm-<commands>\n"
  _reload_php_aliases
}

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Git Alaias (Also see .gitconfig [alias])                        ║
# ╚═════════════════════════════════════════════════════════════════╝
# >> Get the Repository file size
function git-filesize() {
  git rev-list --objects --all |
    git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' |
    sed -n 's/^blob //p' |
    sort --numeric-sort --key=2 |
    cut -c 1-12,41- |
    $(command -v gnumfmt || echo numfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest
}

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Docker Aliases                                                  ║
# ╚═════════════════════════════════════════════════════════════════╝
dock-run() { sudo docker run -i -t --privileged "$@"; }
dock-exec() { sudo docker exec -i -t "$@" /bin/bash; }
dock-log() { sudo docker logs --tail=all -f "$@"; }
dock-port() { sudo docker port "$@"; }
dock-vol() { sudo docker inspect --format '{{ .Volumes }}' "$@"; }
dock-ip() { sudo docker inspect --format '{{ .NetworkSettings.IPAddress }}' "$@"; }
dock-rmc() { sudo docker rm sudo docker ps -qa --filter 'status=exited'; }
dock-rmi() { sudo docker rmi -f sudo docker images | grep '^<none>' | awk '{print $3}'; }
dock-stop() { sudo docker stop '$(docker ps -a -q)'; }
dock-rm() { sudo docker rm '$(docker ps -a -q)'; }

# ┌─────────────────────────────────────────────────────────────────┐
# │ Gnome Backup                                                    │
# └─────────────────────────────────────────────────────────────────┘
# Run a dconf dump of /org/gnome into Dropbox location
function backup-gnome-settings() {
  DATE=$(date +"%Y%m%d")
  FILE="gnome-settings-$HOSTNAME-$DATE.backup"
  echo -e "; To Restore Settings Run.. \n; $ dconf load /org/gnome < gnome-backup\n;
  You may need to remove these comments!" >"$FILE" && dconf dump /org/gnome/ >>"$FILE"
  mv $FILE $HOME/Dropbox/my-linux
  echo -e "[+] File Saved to: $FILE"
  echo -e "[+] Restoration instructions are in the file header."
}

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Archive Aliases                                                 ║
# ╚═════════════════════════════════════════════════════════════════╝
# >> Compress contents into a <name>tar.gz
function compress() {
  if [[ -z $1 ]]; then
    echo -e "[!] You must provide a filename or folder to archive."
    echo -e "compress <name>.tar.gz <folder|file>"
    return
  fi

  # Strip off the Extension
  FILENAME=${1%.*}
  tar -cvzf "$FILENAME.tar.gz" "$1"
}

# >> Extract any compressed file (Does not Work How I want)
extract() {
  if [ -f "$1" ]; then
    case $1 in
    *.7z) 7z x "$1" ;;
    *.tar.bz2) tar -xzfv "$1" ;;
    *.bz2) bunzip2 -v" $1" ;;
    *.tar.gz) tar -xzfv "$1" ;;
    *.gz) gunzip -v "$1" ;;
    *.rar) unrar x "$1" ;;
    *.tar.xz) tar -xf "$1" ;;
    *.tar) tar -xfv "$1" ;;
    *.tgz) tar -xzfv "$1" ;;
    *.xz) tar -xzf "$1" ;;
    *.zip) unzip -v "$1" ;;
    *)
      echo -e "[!] '$FILE' cannot be extracted with extract()"
      echo -e "[!] Formats: 7z, bz2, gz, rar, tar.bz2, tar.gz, tar, tgz, zip, xz"
      ;;
    esac
  else
    echo "[Error]: Cannot extract '$FILE'"
  fi
}

# ╔═════════════════════════════════════════════════════════════════╗
# ║ File Aliases                                                    ║
# ╚═════════════════════════════════════════════════════════════════╝
# >> Find a list of the 20 largest files
function find-largest-files() {
  du -h -x -s -- * | sort -r -h | head -20
}

# >> Show the LATEST file in current directory
latest-file() {
  local f latest
  for f in "${1:-.}"/*; do
    [[ $f -nt $latest ]] && latest="$f"
  done
  printf '%s\n' "$latest"
}

# ╔═════════════════════════════════════════════════════════════════╗
# ║ Instructions                                                    ║
# ╚═════════════════════════════════════════════════════════════════╝
# ** Notes to setup Composer Alternative w/PHP Version
# ═══════════════════════════════════════════════════════════════════
# Switch to version 7.4
# phpversion
# php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
# php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
# php composer-setup.php
# sudo mv composer.phar /usr/lib/bin/composer7.4.phar

# # Switch to version 8.1
# phpversion
# php composer-setup.php
# sudo mv composer.phar /usr/bin/composer8.1

# php -r "unlink('composer-setup.php');"

# sudo update-alternatives --install /usr/bin/composer composer /usr/bin/composer8.1 5
# sudo update-alternatives --install /usr/bin/composer composer /usr/bin/composer7.4 1
# sudo update-alternatives --query composer
# # See its in this path too!
# ls -lta /etc/alternatives/composer

# # User Input Way
# sudo update-alternatives --config composer

# # Auto way, works best when combined with PHP switch alternative
# sudo update-alternatives --set composer /usr/bin/composer7.4
# sudo update-alternatives --set composer /usr/bin/composer8.1
